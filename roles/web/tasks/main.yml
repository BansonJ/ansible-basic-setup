---
# tasks file for web
##################################
# 0) 패키지 설치(common) - java, httpd, mod_ssl, openssl
#    서비스 시작(common) - httpd
#    방화벽 등록(common) - http, https
# 1-1) 톰캣 다운로드 - wget
# 1-2) 심볼릭 링크 연결 - "{{ tomcatpath }}" -> "{{ apachepath }}"
# 1-3) CATALINA_HOME 설정 - ~/.bashrc
# 2) tomcat 유저 생성 - tomcat
# 3) 파일 권한 설정 - '0755'
# 4) 톰캣 서비스화 - /usr/lib/systemd/system/tomcat.service
# 5) Tomcat service 시작
# 6) 방화벽에 8080 포트 추가 - 8080/tcp
# 7) tomcat 설정 - tomcat-users.xml
# 8) httpd 설정 - vhost.conf
# 9) openssl 키 생성
# 10) 파일 백업 - /etc/httpd/conf.d/ssl.conf.OLD
# 11) openssl 설정 - ssl.conf
##################################
- name: 1-1) 톰캣 다운로드
  ansible.builtin.unarchive:
    src: "{{ apachedownload }}"
    dest: /usr/local
    remote_src: true
    creates: "{{ apachepath }}"

- name: 1-2) 심볼릭 링크 연결 - {{ tomcatpath }} -> {{ apachepath }}
  ansible.builtin.file:
    src: "{{ apachepath }}"
    dest: "{{ tomcatpath }}"
    owner: tomcat
    group: tomcat
    state: link

- name: 1-3) CATALINA_HOME 설정 - ~/.bashrc
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    line: 'export CATALINA_HOME="{{ tomcatpath }}"'
  notify: Restart bashrc

- name: 2) tomcat 유저 생성
  ansible.builtin.user:
    name: tomcat
    system: true
    shell: /sbin/nologin
    state: present

- name: 3) 파일 권한 설정
  ansible.builtin.file:
    path: "{{ apachepath }}"
    owner: tomcat
    group: tomcat
    mode: '0755'
    recurse: true

- name: 4) 톰캣 서비스화 - /usr/lib/systemd/system/tomcat.service
  ansible.builtin.template:
    src: tomcat_system.j2
    dest: /usr/lib/systemd/system/tomcat.service
    owner: root
    group: root
    mode: '0644'

- name: 5) Tomcat service 시작
  ansible.builtin.systemd:
    service: tomcat
    state: started
    enabled: true
    daemon_reload: true

- name: 6) 방화벽에 8080 포트 추가 - 8080/tcp
  ansible.posix.firewalld:
    port: 8080/tcp
    permanent: true
    immediate: true
    state: enabled

- name: 7) tomcat 설정 - tomcat-users.xml
  ansible.builtin.template:
    src: tomcat_config.j2
    dest: "{{ tomcatpath }}/conf/tomcat-users.xml"
    owner: root
    group: root
    mode: '0600'

- name: 8) httpd 설정 - vhost.conf
  ansible.builtin.template:
    src: vhost.j2
    dest: /etc/httpd/conf.d/vhost.conf
    owner: root
    group: root
    mode: '0600'
  changed_when: true
  notify: Restart httpd and tomcat

- name: 9) openssl 키 생성
  ansible.builtin.command: >
    openssl req -newkey rsa:2048 -nodes -x509 -days 3650
    -keyout /etc/pki/tls/private/httpd.key
    -out /etc/pki/tls/certs/httpd.crt
    -subj "/CN=www.example.com"
  args:
    creates: /etc/pki/tls/certs/httpd.crt

- name: 10) 파일 백업 - /etc/httpd/conf.d/ssl.conf.OLD
  ansible.builtin.copy:
    src: /etc/httpd/conf.d/ssl.conf
    dest: /etc/httpd/conf.d/ssl.conf.OLD
    owner: root
    group: root
    mode: '0644'
    remote_src: true

- name: 11) openssl 설정 - ssl.conf
  ansible.builtin.template:
    src: ssl.j2
    dest: /etc/httpd/conf.d/ssl.conf
    owner: root
    group: root
    mode: '0644'
